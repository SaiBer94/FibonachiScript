#!/bin/bash

# Function to check if a number is in the Fibonacci sequence
is_fibonacci() {
  local number=$1 #Store the input number in local variable
  local a=0 #declare leading fibonacci number in the sequence
  local b=1 #declare leading following number in the sequence
  local index=0 #declare the index counter

  #Check if parameter is 0
  if [ "$number" -eq 0 ]; then
    echo "$number is in the Fibonacci sequence, in index: 0"
    return 0 #Exit with success status
  fi

  #Loop to generate Fibonacci numbers until 'a' exceeds the input number
  while [ $a -le $number ]; do
    #Check if the current Fibonacci number 'a' equals the input number
    if [ $a -eq $number ]; then
      echo "$number is in the Fibonacci sequence, in index: $index"
      return 0 #Exit with success status
    fi
    local temp=$a     #local storage for the current fibonacci number
    a=$b              #move to the next fibonacci number
    b=$((temp + b))   #calculate the next fibonacci number
    index=$((index + 1)) #increase the index counter by one
  done

  echo "$number is not in the Fibonacci sequence"
  return 1 #exit with failure status
}

 #check if number is provided
# Main script execution
if [ -z "$1" ]; then
  echo "No number provided. Usage: $0 <number>"
  exit 1 #exit with failure status
fi

number=$1                 # Store the input argument in a variable
is_fibonacci "$number"    # execute the function - check if the number is in the Fibonacci sequence
exit 0                    #Exit with success status
